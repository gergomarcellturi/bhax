<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" version="5.0" xml:lang="hu">
    <info>
        <title>Helló, Chaitin!</title>
        <keywordset>
            <keyword/>
        </keywordset>
    </info>
    <section>
        <title>Iteratív és rekurzív faktoriális Lisp-ben</title>
        <para>
               List Processing - Listafeldolgozás
            Röviden LISP. Ez egy igen régi nyelv, kialakulása egészen 1950-ig vezethező vissza, azonban mindettől függetlenül igen széleskörben használt egészen a mai napig.
            Érdekessége hogy dialektusok nem infix hanem prefix alakban dolgoznak. Bár ez talán elsőre kényelmetlennek hangozhat, valójába mindössze arról van szó,
            hogy (x+y) helyett +(x,y)-nal kell dolgoznunk.  Ezen feladatban a Scipt-fu dialektust fogjuk használni.
        </para>
        <para>
            Fontos kiemelni hogy ebben a dialektusban nem állnak rendelkezésünkre olyan kifejezések mint például 'for' 'while' vagy 'switch'. 
            Azonban rendelkezésünkre áll az 'if', amit ki is fogunk használni a következő kis programban:
        </para>
        
        
        <programlisting language="lisp"><![CDATA[
            (define (faktorialis n)
        (if (= n 1)
                1
                (* n (faktorialis (- n 1) ))
        ))

(display (faktorialis 3))

        
        ]]></programlisting>
        
        <para>
            Ez a rekurzív megoldása a feladatnak. Úgy gondolom a legegyszerűbb ha sorról sorra haladunk végig
        </para>
        
        <programlisting language="lisp"><![CDATA[
            (define (faktorialis n)
        ]]></programlisting>
        
        <para>
            A 'define' az eljárást létrehozó kulcsszó. 'faktorialis n' egy egy elemű allista, melynek eleme lesz a paraméter.
        </para>
        <programlisting language="lisp"><![CDATA[
            (if (= n 1)
                1
        ]]></programlisting>
        
        <para>
           Egy egyszerű if statement. Lefordítva: 'Ha n egyenlő 1-gyel' akkor a következő történik: Visszaad egyet (vagy az eljárás értéke 1)
        </para>
        <programlisting language="lisp"><![CDATA[
            (* n (faktorialis (- n 1) ))
        ]]></programlisting>
        
        <para>
           Ha pedig nem, akkor megszorozzuk az 'n' változót a rekurzívan újrahívott fakgorialis eljárásunkkal, azonban most 
            n-1 paraméterekkel.
        </para>
        
        <programlisting language="lisp"><![CDATA[
            (display (faktorialis 3))
        ]]></programlisting>
        
        <para>
          Végül pedig megnézzük működik-e a program azzal hogy kiíratjuk vele a 3 faktoriálisát.
        </para>
        
        <figure>
            <title>Rekurzív</title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="img/recursive.png" scale="50" />
                </imageobject>
                
            </mediaobject>
        </figure>
        
        <para>
            Most pedig ugyanezt Iteratívan
        </para>  
        
        <programlisting language="lisp"><![CDATA[
            (define (faktorialis n)
        (define (iter product counter)
                (if (> counter n)
                        product
                        (iter (* counter product) (+ counter 1))
                ))
        (iter 1 1))

(display (faktorialis 3))

        ]]></programlisting>
        <para>
            Míg az előző '3-tól számolt lefele', ez '1-től fog 3-ig'.
            
            Ami történik, hogy paraméterként adunk meg egyet, ami addig lesz megszorozva a nála egyel nagyobbik számmal amíg el nem
            éri a hármat, vagyis azt a számot aminek meg akartuk kapni a faktoriálisát.
        </para>
        
        <figure>
            <title>Iteratív</title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="img/iteral.png" scale="50" />
                </imageobject>
                
            </mediaobject>
        </figure>
        
        
        <para>
            
        </para>
        
        
        <para>
            Megoldás videó: <link xlink:href="https://youtu.be/z6NJE2a1zIA">https://youtu.be/z6NJE2a1zIA</link>      
        </para>
        <para>
            Megoldás forrása:                
        </para>
    </section>        
<!--        
    <section>
        <title>Weizenbaum Eliza programja</title>
        <para>
            Éleszd fel Weizenbaum Eliza programját!
        </para>
        <para>
            Megoldás videó:
        </para>
        <para>
            Megoldás forrása:                
        </para>
    </section>        
-->
    <section>
        <title>Gimp Scheme Script-fu: króm effekt</title>
        <para>
            Írj olyan script-fu kiterjesztést a GIMP programhoz, amely megvalósítja a króm effektet egy 
            bemenő szövegre!
        </para>
        <para>
            Megoldás videó: <link xlink:href="https://youtu.be/OKdAkI_c7Sc">https://youtu.be/OKdAkI_c7Sc</link>      
        </para>
        <para>
            Megoldás forrása: <link xlink:href="https://gitlab.com/nbatfai/bhax/tree/master/attention_raising/GIMP_Lisp/Chrome">https://gitlab.com/nbatfai/bhax/tree/master/attention_raising/GIMP_Lisp/Chrome</link>               
        </para>
        <para>
            Ebben a feladatban egy Script-fu szkriptet fogunk írni ami 'krómosítja' a szöveget.
            Erre a Tanárúr által felkínált, már megírt programot fogjuk használni.
            Szerencsére minden GIMP függvény és asset a rendelkezésünkre áll ebben a feladatban.
        </para>    
        
        <programlisting language="lisp"><![CDATA[
           (define (color-curve)
    (let* (
        (tomb (cons-array 8 'byte))
    )
        (aset tomb 0 0)
        (aset tomb 1 0)
        (aset tomb 2 50)
        (aset tomb 3 190)
        (aset tomb 4 110)
        (aset tomb 5 20)
        (aset tomb 6 200)
        (aset tomb 7 190)
    tomb)    
)
        ]]></programlisting>
        
        <para>
            Tömbökbe vesszük a fő színeket, amikre szükségünk lesz. Ezek kellenek majd a krómhatás eléréséhez.
        </para>
        
        <programlisting language="lisp"><![CDATA[
     (define (elem x lista)

    (if (= x 1) (car lista) (elem (- x 1) ( cdr lista ) ) )

)

(define (text-wh text font fontsize)
(let*
    (
        (text-width 1)
        (text-height 1)
    )
 
    (set! text-width (car (gimp-text-get-extents-fontname text fontsize PIXELS font)))    
    (set! text-height (elem 2  (gimp-text-get-extents-fontname text fontsize PIXELS font)))    
    
    (list text-width text-height)
    )
)

;(text-width "alma" "Sans" 100)

(define (script-fu-bhax-chrome text font fontsize width height color gradient)
(let*
    (
        (image (car (gimp-image-new width height 0)))
        (layer (car (gimp-layer-new image width height RGB-IMAGE "bg" 100 LAYER-MODE-NORMAL-LEGACY)))
        (textfs)
        (text-width (car (text-wh text font fontsize)))
        (text-height (elem 2 (text-wh text font fontsize)))
        (layer2)        
    )
    
    ;step 1
    (gimp-image-insert-layer image layer 0 0)
    (gimp-context-set-foreground '(0 0 0))
    (gimp-drawable-fill layer  FILL-FOREGROUND )
    (gimp-context-set-foreground '(255 255 255))
   
    (set! textfs (car (gimp-text-layer-new image text font fontsize PIXELS)))
    (gimp-image-insert-layer image textfs 0 0)   
    (gimp-layer-set-offsets textfs (- (/ width 2) (/ text-width 2)) (- (/ height 2) (/ text-height 2)))
   
    (set! layer (car(gimp-image-merge-down image textfs CLIP-TO-BOTTOM-LAYER)))
   
    ;step 2   
    (plug-in-gauss-iir RUN-INTERACTIVE image layer 15 TRUE TRUE)
   
    ;step 3
    (gimp-drawable-levels layer HISTOGRAM-VALUE .11 .42 TRUE 1 0 1 TRUE)
   
    ;step 4   
    (plug-in-gauss-iir RUN-INTERACTIVE image layer 2 TRUE TRUE)

    ;step 5    
    (gimp-image-select-color image CHANNEL-OP-REPLACE layer '(0 0 0))
    (gimp-selection-invert image)

    ;step 6        
    (set! layer2 (car (gimp-layer-new image width height RGB-IMAGE "2" 100 LAYER-MODE-NORMAL-LEGACY)))
    (gimp-image-insert-layer image layer2 0 0)

    ;step 7        
	(gimp-context-set-gradient gradient) 
	(gimp-edit-blend layer2 BLEND-CUSTOM LAYER-MODE-NORMAL-LEGACY GRADIENT-LINEAR 100 0 REPEAT-NONE 
        FALSE TRUE 5 .1 TRUE width (/ height 3) width  (- height (/ height 3)))
    
    ;step 8        
    (plug-in-bump-map RUN-NONINTERACTIVE image layer2 layer 120 25 7 5 5 0 0 TRUE FALSE 2)
   
    ;step 9       
    (gimp-curves-spline layer2 HISTOGRAM-VALUE 8 (color-curve))
      
    (gimp-display-new image)
    (gimp-image-clean-all image)
    )
)

;(script-fu-bhax-chrome "Bátf41 Haxor" "Sans" 120 1000 1000 '(255 0 0) "Crown molding")

(script-fu-register "script-fu-bhax-chrome"
    "Chrome3"
    "Creates a chrome effect on a given text."
    "Norbert Bátfai"
    "Copyright 2019, Norbert Bátfai"
    "January 19, 2019"
    ""
    SF-STRING       "Text"      "Bátf41 Haxor"
    SF-FONT         "Font"      "Sans"
    SF-ADJUSTMENT   "Font size" '(100 1 1000 1 10 0 1)
    SF-VALUE        "Width"     "1000"
    SF-VALUE        "Height"    "1000"
    SF-COLOR        "Color"     '(255 0 0)
    SF-GRADIENT     "Gradient"  "Crown molding"    
)
(script-fu-menu-register "script-fu-bhax-chrome" 
    "<Image>/File/Create/BHAX"
)

        ]]></programlisting>
        
        <figure>
            <title></title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="img/krom1.png" scale="100" />
                </imageobject>
                
            </mediaobject>
        </figure>
        
        <figure>
            <title></title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="img/krom2.png" scale="100" />
                </imageobject>
                
            </mediaobject>
        </figure>
        
        
    </section>        

    <section>
        <title>Gimp Scheme Script-fu: név mandala</title>
        <para>
            Írj olyan script-fu kiterjesztést a GIMP programhoz, amely név-mandalát készít a
            bemenő szövegből!               
        </para>
        <para>
            Megoldás videó: <link xlink:href="https://bhaxor.blog.hu/2019/01/10/a_gimp_lisp_hackelese_a_scheme_programozasi_nyelv">https://bhaxor.blog.hu/2019/01/10/a_gimp_lisp_hackelese_a_scheme_programozasi_nyelv</link>      
        </para>
        <para>
            Megoldás forrása: <link xlink:href="https://gitlab.com/nbatfai/bhax/tree/master/attention_raising/GIMP_Lisp/Mandala">https://gitlab.com/nbatfai/bhax/tree/master/attention_raising/GIMP_Lisp/Mandala</link>               
        </para>
        
                 
                       
                             
    </section>        

<!--    
    <section>
        <title>Lambda</title>
        <para>
            Hasonlítsd össze a következő programokat!
        </para>
        <para>
            Megoldás videó: <link xlink:href=""></link>      
        </para>
        <para>
            Megoldás forrása: <link xlink:href=""></link>               
        </para>
        <para>
            Tanulságok, tapasztalatok, magyarázat...
        </para>            
    </section>        
-->    

<!--
    <section>
        <title>Omega</title>
        <para>
        </para>
        <para>
            Megoldás videó:
        </para>
        <para>
            Megoldás forrása:                
        </para>
    </section>        

</chapter>                
