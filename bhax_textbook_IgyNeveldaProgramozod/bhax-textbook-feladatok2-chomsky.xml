<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" version="5.0" xml:lang="hu">
    <info>
        <title>Helló, Chomsky!</title>
        <keywordset>
            <keyword/>
        </keywordset>
    </info>

    <section>
        <title>Encoding</title>
        <para>
        </para>
        <para>
            Fordítsuk le és futtassuk a Javat tanítok könyv MandelbrotHalmazNagyító.java forrását úgy, hogy a
fájl nevekben és a forrásokban is meghagyjuk az ékezetes betűket!
https://www.tankonyvtar.hu/hu/tartalom/tkt/javat-tanitok-javat/adatok.html
        </para>

        <para>
          A kérdéses program gond nélkül lefutott, miután a forrásfájljait UTF8-ban mentettem el
        </para>

        <figure>
            <title>Nagyító</title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="img/nagyitoutf.png" scale="35" />
                </imageobject>
                
            </mediaobject>
        </figure> 
        
    </section>   


    <section>
        <title>OOCWC lexer</title>
        <para>Izzítsuk
be
az
OOCWC-t
és
vázoljuk
a
https://github.com/nbatfai/robocar-
emulator/blob/master/justine/rcemu/src/carlexer.ll lexert és kapcsolását a programunk OO
struktúrájába!
        </para>



        <para>
            Az interneten számos szleng alakult ki bizonyos szavakra. A számtalan rövidítések mellett megjelentek olyan szavak is, melyek a kifejezésekben található 
            betűket cserélnek le más, de hasonló karakterekre, ezzel 'hangsúlyt' adva a szavaknak.
            
            Ez a program is ezt fogja csinálni, megadott karaktereket fog lecserélni, ezzel szlengesítve az inputot.
        </para>
        
        
        
        <programlisting language="c"><![CDATA[%{
  #include <stdio.h>
  #include <stdlib.h>
  #include <time.h>
  #include <ctype.h>

  #define L337SIZE (sizeof l337d1c7 / sizeof (struct cipher))
    
  struct cipher {
    char c;
    char *leet[4];
  } l337d1c7 [] = {
            
            ]]></programlisting>
            
            <para>
                A kód első sorában adjuk meg a fő struktúrát. Például *leet[4]-ben fogjuk megadni hogy egyes karakterekhez milyen karakter típust lehet hozzárendelni.
            </para>
            
            <programlisting language="c"><![CDATA[

  {'a', {"4", "4", "@", "/-\\"}},
  {'b', {"b", "8", "|3", "|}"}},
  {'c', {"c", "(", "<", "{"}},
  {'d', {"d", "|)", "|]", "|}"}},
  {'e', {"3", "3", "3", "3"}},
  {'f', {"f", "|=", "ph", "|#"}},
  {'g', {"g", "6", "[", "[+"}},
  {'h', {"h", "4", "|-|", "[-]"}},
  {'i', {"1", "1", "|", "!"}},
  {'j', {"j", "7", "_|", "_/"}},
  {'k', {"k", "|<", "1<", "|{"}},
  {'l', {"l", "1", "|", "|_"}},
  {'m', {"m", "44", "(V)", "|\\/|"}},
  {'n', {"n", "|\\|", "/\\/", "/V"}},
  {'o', {"0", "0", "()", "[]"}},
  {'p', {"p", "/o", "|D", "|o"}},
  {'q', {"q", "9", "O_", "(,)"}},
  {'r', {"r", "12", "12", "|2"}},
  {'s', {"s", "5", "$", "$"}},
  {'t', {"t", "7", "7", "'|'"}},
  {'u', {"u", "|_|", "(_)", "[_]"}},
  {'v', {"v", "\\/", "\\/", "\\/"}},
  {'w', {"w", "VV", "\\/\\/", "(/\\)"}},
  {'x', {"x", "%", ")(", ")("}},
  {'y', {"y", "", "", ""}},
  {'z', {"z", "2", "7_", ">_"}},
  
  {'0', {"D", "0", "D", "0"}},
  {'1', {"I", "I", "L", "L"}},
  {'2', {"Z", "Z", "Z", "e"}},
  {'3', {"E", "E", "E", "E"}},
  {'4', {"h", "h", "A", "A"}},
  {'5', {"S", "S", "S", "S"}},
  {'6', {"b", "b", "G", "G"}},
  {'7', {"T", "T", "j", "j"}},
  {'8', {"X", "X", "X", "X"}},
  {'9', {"g", "g", "j", "j"}}
  
                
                ]]></programlisting>
            
            <para>
                Itt határozzuk meg, hogy milyen karaktert milyen karakterre lehet lecserélni. 
            </para>
            
            <programlisting language="c"><![CDATA[
// https://simple.wikipedia.org/wiki/Leet
  };
  
%}
%%
. {
    
    int found = 0;
    for(int i=0; i<L337SIZE; ++i)
    {
    
      if(l337d1c7[i].c == tolower(*yytext))
      {
      
        int r = 1+(int) (100.0*rand()/(RAND_MAX+1.0));
      
          if(r<91)
          printf("%s", l337d1c7[i].leet[0]);
          else if(r<95)
          printf("%s", l337d1c7[i].leet[1]);
        else if(r<98)
          printf("%s", l337d1c7[i].leet[2]);
        else 
          printf("%s", l337d1c7[i].leet[3]);

        found = 1;
        break;
      }
      ]]></programlisting>
            
            <para>
                Itt pedig randomizáljuk azt, hogy melyik karaktert fogja választani a megadottak közül.
            </para>
            
            <programlisting language="c"><![CDATA[
    }
    
    if(!found)
       printf("%c", *yytext);   
    
  }
%%
int 
main()
{
  srand(time(NULL)+getpid());
  yylex();
  return 0;
}
]]></programlisting>




        <para>
           A program futtatásának lépései:
        </para>
        
        <screen>
            lex -o l33t.c l33t.l
        </screen>
        <screen>
            gcc l33t.c -o l33t
        </screen>
        <para>
            Futtatva pedig a következőt kapuk:
        </para>
        <screen>
            ./l33t 
let us try this program to see if it works
|_3t us tr th1s pr0gr4m t0 533 1f 17 w0rks

        </screen>
        
        <para>
            Ne felejtsük el hogy az angol ábécé betűit adtuk meg neki, így ha esetleg ékezetes betűt adnánk meg neki akkor azok nem fognak változni
        </para>
        
        <screen>
             ./l33t 
Az ékezetes betűk nem fognak változni
4z ék3z3t3s b3tűk /V3m f0gn4k vált0zn1

        </screen>


      </section>



      <section>
        <title>Fullscreen</title>

        <para>
          
          Készítsünk egy teljes képernyős Java programot!
          Tipp: https://www.tankonyvtar.hu/en/tartalom/tkt/javat-tanitok-javat/ch03.html#labirintus_jatek

        </para>

        <para>
          Íme a kód, a teljesképernyős programhoz:
        </para>
<programlisting language="java"><![CDATA[
import java.awt.Toolkit;

public class fullscreen extends javax.swing.JFrame {



  public fullscreen()
  {
    this.setUndecorated(true);
    this.setAlwaysOnTop(true);
    this.setResizable(false);
    this.setVisible(true);

    //initComponents();
    Toolkit tk = Toolkit.getDefaultToolkit();

    int xsize = (int) tk.getScreenSize().getWidth();
    int ysize = (int) tk.getScreenSize().getHeight();

    this.setSize(xsize, ysize);
  }

  public static void main(String[] args) {
    fullscreen full = new fullscreen();
  }
}
]]></programlisting>

<para>Különösképpen nem csinál semmit, viszont a feladatnak eleget tesz, hiszen ez egy teljesképernyős program, még akkor is, ha csak egy szürke ablak.</para>
      </section>

        
        

</chapter>                
